Description: >
  Cloudfront distribution for UdaPeople.

Parameters:
  OldWorkflowID:
    Description: Old Unique identifier.
    Type: String

  NewWorkflowID:
    Description: New Unique identifier.
    Type: String

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: Micro-Udapeople

  Creator:
    Description: A Creator of resource
    Type: String
    Default: KhiemNV6

  VpcCIDR: 
    Description: Please enter VPC CIDR
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter public subnet CIDR in AZ1
    Type: String
    Default: 10.0.0.0/24

  PublicSubnet2CIDR:
    Description: Please enter public subnet CIDR in AZ2
    Type: String
    Default: 10.0.1.0/24


Resources:
  
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Join
      - "-"
      - - 'micro-udapeople'
        - !Select
          - 2
          - !Split
            - "/"
            - !Ref "AWS::StackId"

  VPC: 
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags: 
        - Key: Name 
          Value: !Ref EnvironmentName
        - Key: Creator 
          Value: !Ref Creator

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
        - Key: Creator 
          Value: !Ref Creator

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn: InternetGateway
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  
  PublicSubnet1: 
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
        - Key: Creator 
          Value: !Ref Creator

  PublicSubnet2: 
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
        - Key: Creator 
          Value: !Ref Creator

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: InternetGatewayAttachment
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Routes
        - Key: Creator 
          Value: !Ref Creator

  DefaultPublicRoute: 
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PublicRouteTable
      - PublicSubnet1
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PublicRouteTable
      - PublicSubnet2
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  ClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub Micro-Udapeople-SecurityGroup
      VpcId: !Ref VPC
      GroupDescription: Allow some connection.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3030
          ToPort: 3030
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 9100
          ToPort: 9100
          CidrIp: 0.0.0.0/0
      Tags: 
          - Key: Name 
            Value: !Sub ${EnvironmentName} Public Routes
          - Key: Creator 
            Value: !Ref Creator

  EKSCluster:
    Type: AWS::EKS::Cluster
    DependsOn:
      - PublicSubnet1
      - PublicSubnet2
    Properties:
      Name: Micro-Udapeople-Cluster
      Version: "1.22"
      RoleArn: "arn:aws:iam::809074436830:role/EKSClusterRole"
      ResourcesVpcConfig:
        SecurityGroupIds:
          - Ref: ClusterSecurityGroup
        SubnetIds:
          - Ref: PublicSubnet1
          - Ref: PublicSubnet2
        EndpointPublicAccess: true
        EndpointPrivateAccess: true
      Logging:
        ClusterLogging:
          EnabledTypes:
            - Type: api
            - Type: audit
      Tags:
        - Key: Creator 
          Value: !Ref Creator
  
  EKSNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    DependsOn:
      - EKSCluster
    Properties:
      ClusterName: !Ref EKSCluster
      NodeRole: 'arn:aws:iam::809074436830:role/AmazonEKSNodeRole'
      InstanceTypes: 
        - t3.micro
      ScalingConfig:
        MinSize: 1
        DesiredSize: 1
        MaxSize: 2
      Subnets:
        - Ref: PublicSubnet1
        - Ref: PublicSubnet2